// <auto-generated />
using hackernews;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace hackernews.Migrations
{
    [DbContext(typeof(HackerNewsContext))]
    [Migration("20170831153134_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("hackernews.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("NewsStoryId");

                    b.Property<string>("Submitter");

                    b.Property<string>("Text");

                    b.Property<DateTime>("TimePosted");

                    b.Property<int>("VoteCount");

                    b.HasKey("Id");

                    b.HasIndex("NewsStoryId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("hackernews.Models.NewsStory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Body");

                    b.Property<int>("Points");

                    b.Property<string>("Submitter");

                    b.Property<DateTime>("TimePosted");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("NewsStory");
                });

            modelBuilder.Entity("hackernews.Models.Comment", b =>
                {
                    b.HasOne("hackernews.Models.NewsStory", "NewsStory")
                        .WithMany("Comments")
                        .HasForeignKey("NewsStoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
